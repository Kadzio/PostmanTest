{
	"info": {
		"_postman_id": "55b0b659-62dd-47a7-967f-3070cf3bd8f8",
		"name": "Posts Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Nowy post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"nowy post 2\",\r\n    \"author\": \"tester oprogramowania\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pojedynczy post z konkretnym id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"Przed zmiana wartosci zmiennej id\")\r",
							"console.log(pm.environment.get(\"id\"));\r",
							"pm.environment.set(\"id\", \"2\");\r",
							"console.log(\"Po zmianie wartosci id\")\r",
							"console.log(pm.environment.get(\"id\"));\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sprawdz tytul i autora\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"pierwszy post\");\r",
							"    pm.expect(jsonData.author).to.eql(\"Filip 1\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}/posts/1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"posts",
						"1"
					]
				},
				"description": "Pobierz post z konkretnym id"
			},
			"response": []
		},
		{
			"name": "Wszystkie posty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				},
				"description": "Pobieranie wszystkich postow"
			},
			"response": []
		},
		{
			"name": "Aktualizacja ca≈Çego zasobu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sprawdz autora\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(\"tester oprogramowania\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"author\": \"tester oprogramowania\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/posts/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aktualizacja czesci zasobu",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sprawdz autora\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(\"nowy autor\");\r",
							"     pm.expect(jsonData.title).to.eql(\"trzeci post\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\": \"nowy autor\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/posts/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"3"
					]
				},
				"description": "mozesz aktualizowac pojedyncze pola, bez usuwania pozostalych"
			},
			"response": []
		},
		{
			"name": "Usuwanie elementu z kokretnym id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/posts/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"posts",
						"4"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Successful request\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201, 202]);",
					"});"
				]
			}
		}
	]
}